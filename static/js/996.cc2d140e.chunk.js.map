{"version":3,"file":"static/js/996.cc2d140e.chunk.js","mappings":"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","sources":["api/index.js","containers/About/About.jsx","pages/About/About.jsx"],"sourcesContent":["import sanityClient from \"../client\";\r\n\r\nexport const fetchAboutData = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"about\"]{\r\n\t\t\ttitle,\r\n\t\t\tbody,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data[0];\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchBlogData = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"post\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tauthor,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t},\r\n\t\t\t\t\talt\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\tpublishedAt,\r\n\t\t\t\tdescription\r\n\t\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchInstaPost = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"insta\"]{\r\n\t\t\tpublishedAt,\r\n\t\t\turl,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroData = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"hero\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchProduct = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"product\"]{\r\n\t\t\ttitle,\r\n\t\t\tslug,\r\n\t\t\tprojectType,\r\n\t\t\tspecial,\r\n\t\t\tnew,\r\n\t\t\tbestSeller,\r\n\t\t\tprice,\r\n\t\t\tbody,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroProduct = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"heroProduct\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroBlog = async () => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[_type == \"heroBlog\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchSinglePost = async (slug) => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[slug.current == \"${slug}\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\t\"name\": author->name,\r\n\t\t\t\t\"authorImage\": author->image,\r\n\t\t\t\tpublishedAt\r\n\t\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchSingleProduct = async (slug) => {\r\n  return await sanityClient\r\n    .fetch(\r\n      `*[slug.current == \"${slug}\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\tprojectType,\r\n\t\t\t\tspecial,\r\n\t\t\t\tnew,\r\n\t\t\t\tbestSeller,\r\n\t\t\t\tprice\r\n\t\t\t}`\r\n    )\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchBlogData, fetchSinglePost } from \"../../api\";\r\nimport { setPosts } from \"../../app/slice/fetchApi\";\r\nimport { SinglePost, SpinnerBook } from \"../../components\";\r\n\r\nconst AboutContainer = () => {\r\n  const [singlePost, setSinglePost] = useState(null);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const posts = useSelector((state) => state.api.posts);\r\n\r\n  const recentPosts = posts ? posts.slice(0, 3) : null;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setSpinner(false);\r\n    }, 2300);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchSinglePost(\"safka\")\r\n      .then((data) => {\r\n        setSinglePost(data[0]);\r\n      })\r\n      .catch((error) => console.log(\"error: \", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!posts) {\r\n      fetchBlogData()\r\n        .then((posts) => {\r\n          let postSort = [];\r\n          postSort = posts.slice().sort((value1, value2) => {\r\n            const dateValue1 = new Date(value1.publishedAt).getTime();\r\n            const dateValue2 = new Date(value2.publishedAt).getTime();\r\n            return dateValue1 < dateValue2 ? 1 : -1;\r\n          });\r\n          const action = setPosts(postSort);\r\n          dispatch(action);\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }, [dispatch, posts]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {spinner ? (\r\n        <SpinnerBook />\r\n      ) : (\r\n        <SinglePost post={singlePost} recentPosts={recentPosts} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutContainer;\r\n","import React from \"react\";\r\nimport AboutContainer from \"../../containers/About/About\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <AboutContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"names":["fetchAboutData","sanityClient","then","data","catch","error","console","log","fetchBlogData","fetchInstaPost","fetchHeroData","fetchProduct","fetchHeroProduct","fetchHeroBlog","fetchSinglePost","slug","fetchSingleProduct","useState","singlePost","setSinglePost","spinner","setSpinner","posts","useSelector","state","api","recentPosts","slice","dispatch","useDispatch","useEffect","setTimeout","postSort","sort","value1","value2","Date","publishedAt","getTime","action","setPosts","className","post"],"sourceRoot":""}